<?php
/**
 * @file
 * Leads module for AcroCRM
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param $path
 *  Path of the site to display help
 * @param $arg
 *  Array that holds the current path returned by the arg() function.
 * @return string
 *  Ant HTML string
 */
function acrocrm_leads_help($path, $arg) {
  switch ($path) {
    case "admin/help#acrocrm_leads":
      return '<p>' . t("Leads module for AcroCRM") . '</p>';
      break;
  }
}

/**
 * Implements hook_menu
 */
function acrocrm_leads_menu() {
  $items = array();

  $items['acrocrm_leads/overview'] = array(
    'title' => 'AcroCRM Leads Overview',
    'description' => 'AcroCRM Leads Overview',
    'page callback' => 'acrocrm_leads_overview_page',
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc'
  );

  $items['acrocrm_leads/my_leads'] = array(
    'title' => 'AcroCRM My Leads',
    'description' => 'AcroCRM My Leads',
    'page callback' => 'acrocrm_leads_my_leads_page',
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/new_lead'] = array(
    'page callback' => 'acrocrm_leads_new_lead_ajax',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/filter_leads'] = array(
    'page callback' => 'acrocrm_leads_filter_leads_ajax',
    'page arguments' => array(2, 3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/edit_lead'] = array(
    'page callback' => 'acrocrm_leads_edit_lead_ajax',
    'page arguments' => array(2, 3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/delete_lead'] = array(
    'page callback' => 'acrocrm_leads_delete_lead_ajax',
    'page arguments' => array(2, 3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/assign_lead'] = array(
    'page callback' => 'acrocrm_leads_assign_lead_ajax',
    'access callback' => TRUE,
    'page arguments' => array(2, 3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/get_lead_priority'] = array(
    'page callback' => 'acrocrm_leads_get_lead_priority',
    'access callback' => TRUE,
    'page arguments' => array(2, 3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/unassign_lead'] = array(
    'page callback' => 'acrocrm_leads_unassign_lead_ajax',
    'access callback' => TRUE,
    'page arguments' => array(2),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['acrocrm_leads/assign_lead_priority'] = array(
    'page callback' => 'acrocrm_leads_priority_get_ajax',
    'page arguments' => array(3),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc',
  );

  $items['admin/config/acrocrm/acrocrm_leads'] = array(
    'title' => 'AcroCRM Leads Contact form',
    'description' => 'Configuration for the AcroCRM Leads Contact form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('acrocrm_leads_contact_form_settings_form'),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/acrocrm_leads.forms.inc',
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

function acrocrm_leads_theme() {
  return array(
    'page__acrocrm_leads' => array(
      'variables' => array('page' => NULL),
      'preprocess functions' => array('acrocrm_leads_page'),
    ),
    'acrocrm_leads_home' => array(
      'base hook' => 'page__acrocrm_leads',
      'path' => drupal_get_path('module', 'acrocrm') . '/templates',
      'template' => 'main--acrocrm',
    ),
  );
}

function acrocrm_leads_page(&$variables) {
  acrocrm_page($variables);

  $module_path = drupal_get_path('module', 'acrocrm');
//  $css_path = $module_path . '/templates/assets/css/';
  $js_path = $module_path . '/templates/assets/js/';

  drupal_add_js($js_path . 'spin.min.js', array('group' => JS_THEME));
  drupal_add_js($js_path . 'readmore.min.js', array('group' => JS_THEME));
}

/**
 * Implements hook_block_info().
 */
function acrocrm_leads_block_info() {
  $blocks['acrocrm_leads_contact'] = array(
    // Name that will appear in the block lists.
    'info' => t('AcroCRM Leads Contact form'),
    'file' => 'includes/acrocrm_leads.forms.inc',
    // Default setting
    'cache' => DRUPAL_CACHE_PER_ROLE
  );
  return $blocks;
}

// @TODO: Document.
function acrocrm_leads_block_view($delta = '') {
  switch ($delta) {
    case 'acrocrm_leads_contact':
      $block['subject'] = t('Contact form');
      $form = drupal_get_form('acrocrm_leads_contact_form');
      $block['content'] = drupal_render($form);
      return $block;
  }
}

// @TODO: Document.
function acrocrm_leads_form_acrocrm_leads_edit_lead_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'acrocrm_leads_edit_lead_custom_form_submit';
}

// @TODO: Document.
function acrocrm_leads_edit_lead_custom_form_submit(&$form, &$form_state) {
  $redirect_page = $form['redirect_page']['#value'];

  if ($redirect_page == '' || $redirect_page == NULL) {
    $form_state['redirect'] = 'acrocrm_leads/overview';
  }
  else {
    $form_state['redirect'] = 'acrocrm_leads/' . $redirect_page;
  }
}

// @TODO: Document.
function acrocrm_leads_form_acrocrm_leads_new_lead_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'acrocrm_leads_new_lead_custom_form_submit';
}

// @TODO: Document.
function acrocrm_leads_new_lead_custom_form_submit(&$form, &$form_state) {
  $form_state['redirect'] = 'acrocrm_leads/overview';
}

/**************************************************************
 * Contact form for block. I can't seem to figure out how to
 * put it in another file...
 * /**************************************************************
 *
 * /**
 * Form callback: website visitor contact.
 */
function acrocrm_leads_contact_form($form, &$form_state) {
  $name_field_type = variable_get('acrocrm_leads_name_field', 'name');

  $form['contact_firstname'] = array(
    '#type' => 'textfield',
    '#title' => 'First Name',
    '#size' => 50,
    '#maxlength' => 50,
    '#required' => FALSE,
    '#access' => $name_field_type == 'name' ? FALSE : TRUE
  );

  $form['contact_name'] = array(
    '#type' => 'textfield',
    '#title' => $name_field_type == 'name' ? 'Name' : 'Last Name',
    '#size' => 50,
    '#maxlength' => 50,
    '#required' => TRUE
  );

  $form['contact_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#size' => 50,
    '#maxlength' => 50,
    '#required' => TRUE
  );

  $form['contact_phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone Number'),
    '#size' => 32,
    '#maxlength' => 15,
    '#required' => FALSE
  );

  $form['contact_comments'] = array(
    '#type' => 'textarea',
    '#title' => t('Comments'),
    '#maxlength' => 1000,
    '#required' => TRUE
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Submit callback for acrocrm_leads_contact_form().
 */
function acrocrm_leads_contact_form_submit($form, $form_state) {
  db_insert('leads')
    ->fields(array(
      'name' => $form_state['values']['contact_name'],
      'firstname' => $form_state['values']['contact_firstname'],
      'email' => $form_state['values']['contact_email'],
      'phone' => $form_state['values']['contact_phone'],
      'comments' => $form_state['values']['contact_comments'],
      'created_time' => date('Y-m-d H:i:s'),
               'status' => 'UNCOMMITTED'
    ))
    ->execute();
  drupal_set_message(t('Your comment has been sent successfully.'));
}

/**
 * Implements validation from the Form API.
 *
 * @param $form
 *   A structured array containing the elements and properties of the form.
 * @param $form_state
 *   An array that stores information about the form's current state
 *   during processing.
 */
function acrocrm_leads_contact_form_validate($form, &$form_state) {
  $email = $form_state['values']['contact_email'];
  $email_pattern = '/^[^@]*@[^@]*/';
  if ($email != '' && !preg_match($email_pattern, $email)) {
    form_set_error('contact_email', t('You must enter a valid email address.'));
  }
}
